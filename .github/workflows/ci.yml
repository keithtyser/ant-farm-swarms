# .github/workflows/ci.yml
name: CI pipeline (ant‑farm swarms)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write      # needed for GHCR pushes

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  PYTHONUNBUFFERED: 1

# ──────────────────────────────────────────────────────────────
# 1. Lint + unit‑tests matrix
# ──────────────────────────────────────────────────────────────
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pyver: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.pyver }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.pyver }}
          cache: pip

      - name: Install project (editable) + dev deps
        run: |
          python -m pip install --upgrade pip
          pip install -e ./backend[dev]           # ← [dev] extra lives in pyproject.toml
          pip install pytest pytest-cov

      - name: Run pytest
        working-directory: backend
        env:
          PYTHONPATH: "${{ github.workspace }}/backend"
        run: pytest -q


# ──────────────────────────────────────────────────────────────
# 2. Build distributable sdist + wheel
# ──────────────────────────────────────────────────────────────
  package:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install PEP‑517 front‑end
        run: |
          python -m pip install --upgrade pip
          python -m pip install build              # provides `python -m build`

      - name: Build sdist & wheel (isolated)
        working-directory: backend
        run: python -m build --sdist --wheel .

      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-dist
          path: backend/dist/*


# ──────────────────────────────────────────────────────────────
# 3. Build & push Docker images (only on main)
# ──────────────────────────────────────────────────────────────
  docker:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/web
            ghcr.io/${{ github.repository }}/worker
            ghcr.io/${{ github.repository }}/frontend

      # ── web image ───────────────────────────────────────────
      - name: Build & push web
        uses: docker/build-push-action@v5
        with:
          context: backend
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/web:latest
            ghcr.io/${{ github.repository }}/web:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}

      # ── worker image (same Dockerfile, diff entrypoint) ────
      - name: Build & push worker
        uses: docker/build-push-action@v5
        with:
          context: backend
          push: true
          build-args: |
            CMD_OVERRIDE=python -m antfarm.worker     # optional build‑arg pattern
          tags: |
            ghcr.io/${{ github.repository }}/worker:latest
            ghcr.io/${{ github.repository }}/worker:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}

      # ── frontend image ─────────────────────────────────────
      - name: Build & push frontend
        uses: docker/build-push-action@v5
        with:
          context: frontend
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/frontend:latest
            ghcr.io/${{ github.repository }}/frontend:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
